{
	"name":"mCRL2",
	"patterns":[
		{
			"include":"#comment"
		},
		{
			"include":"#number"
		},
		{
			"include":"#constant"
		},
		{
			"include":"#type"
		},
		{
			"include":"#control"
		},
		{
			"include":"#keyword"
		},
		{
			"include":"#id"
		},
		{
			"include":"#op"
		}
	],
	"repository":{
		"comment":{
			"name": "comment.line.percentage.mcrl2",
			"match": "%.+"
		},
		"constant":{
			"name": "constant.language.mcrl2",
			"match": "(delta|false|nil|tau|true)(?!\\w)"
		},
		"type":{
			"name": "entity.name.type.mcrl2",
			"match": "(Bag|Bool|Int|List|Nat|Pos|Real|Set)(?!\\w)"
		},
		"control":{
			"name": "keyword.control.mcrl2",
			"match": "(act|init|eqn|map|proc|sort|struct|var)(?!\\w)"
		},
		"keyword":{
			"name": "keyword.other.mcrl2",
			"match": "(allow|block|comm|cons|delay|div|end|glob|hide|if|in|lambda|mod|pbes|rename|sum|val|whr|yaled)(?!\\w)"
		},
		"number":{
			"name": "constant.numeric.mcrl2",
			"match": "0|-?([1-9][0-9]*)"
		},
		"id":{
			"name": "variable.other.mcrl2",
			"match": "[A-Za-z_][A-Za-z_0-9']*"
		},
		"op":{
			"name": "keyword.operator.mcrl2",
			"match": "\\+|\\.|(\\|)|(->)|<|>|(==)|(!=)|(<=)|(>=)|-|\\*|!|(=>)"
		}
	},
	"scopeName":"source.mcrl2"
 }